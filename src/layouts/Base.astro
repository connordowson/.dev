---
import Navbar from "../components/Navbar.astro";
const { title, data, metaKeywords, metaDescription, metaImageURL, isBlogPost } =
  Astro.props;

import "@styles/main.css";
const site = Astro.site;
const url = Astro.url;
---

<!DOCTYPE html>
<html lang="en" data-theme="dark">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta
      name="description"
      content={metaDescription
        ? metaDescription
        : "Portfolio site for Connor Dowson, a Bristol based front end web developer."}
    />

    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#34d399" />
    <meta name="msapplication-TileColor" content="#34d399" />
    <meta name="theme-color" content="#34d399" />

    {
      metaKeywords ? (
        <meta name="keywords" content={metaKeywords.join(",")} />
      ) : null
    }
    <meta
      property="og:image"
      content={metaImageURL ? metaImageURL : `${site}meta-image.png`}
    />
    <meta
      property="og:title"
      content={title ||
        `${data.title} | Connor Dowson | Portfolio` ||
        "Connor Dowson | Portfolio"}
    />
    <meta property="og:type" content={isBlogPost ? "article" : "website"} />

    <meta
      name="og:description"
      content={metaDescription
        ? metaDescription
        : "Portfolio site for Connor Dowson, a Bristol based front end web developer."}
    />
    <meta property="og:url" content={url} />

    <title>
      {
        title ||
          `${data.title} | Connor Dowson | Portfolio` ||
          "Connor Dowson | Portfolio"
      }
    </title>
    <!-- This is intentionally inlined to avoid FOUC -->
    <script is:inline>
      const root = document.documentElement;
      const theme = localStorage.getItem("theme-preference");
      if (
        theme === "dark" ||
        (!theme && window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        root.setAttribute("data-theme", "dark");
      } else {
        root.setAttribute("data-theme", "light");
      }
    </script>

    <!-- Cronitor RUM -->
    <script async src="https://rum.cronitor.io/script.js"></script>
    <script type="text/javascript">
      window.cronitor =
        window.cronitor ||
        function () {
          (window.cronitor.q = window.cronitor.q || []).push(arguments);
        };
      cronitor("config", { clientKey: "8a9624f4d7b76c495ff9eb9036ad093f" });
    </script>
  </head>

  <body>
    <!-- Preload some image assets -->
    <link
      rel="preload"
      href={`${site}noise.png`}
      as="image"
      fetchpriority="high"
    />
    <link
      rel="preload"
      href={`${site}post-hero-dark.svg`}
      as="image"
      fetchpriority="high"
    />
    <link
      rel="preload"
      href={`${site}post-hero-light.svg`}
      as="image"
      fetchpriority="high"
    />
    <Navbar />
    <main><slot /></main>
  </body>
</html>
