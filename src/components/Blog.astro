---
import { getCollection } from "astro:content";
import { format } from "date-fns";
import Section from "@components/Section.astro";

const blogPostsData = await await getCollection("blog");

const getReadingTime = (content) => {
  if (!content) return;
  const clean = content.replace(/<\/?[^>]+(>|$)/g, "");
  const numberOfWords = clean.split(/\s/g).length;
  const wordsPerMinute = 200;
  return Math.ceil(numberOfWords / wordsPerMinute);
};

let blogPosts = blogPostsData.map((post) => {
  return {
    ...post,
    formattedDate: format(new Date(post.data.date), "do MMMM, yyyy"),
    timeToRead: getReadingTime(post.body),
  };
});
let nonDraftPosts = blogPosts.filter((post) => !post.data.draft);
nonDraftPosts.sort(
  (a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf()
);
nonDraftPosts = [...nonDraftPosts.slice(0, 3)];
---

<Section width="large" relative>
  <div class="flow">
    <h2>Blog</h2>
    <p>
      Random posts, mostly about web dev 👨‍💻, music 🎶, and anything else that I
      find interesting. <a href="./blog">View all posts</a>.
    </p>

    <ul class="grid blog-grid">
      {
        nonDraftPosts.map(({ data, formattedDate, timeToRead, slug }) => {
          return (
            <li class="card blog-card shadow-sm flow">
              <a href={`/blog/${slug}`}>
                <h3>{data.title}</h3>
              </a>

              <div class="blog-card__info">
                <time>{formattedDate}</time>
                <span>{timeToRead} mins</span>
              </div>
            </li>
          );
        })
      }
    </ul>
  </div>
</Section>
